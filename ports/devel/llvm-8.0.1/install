if [ -f llvm-8.0.1.src.tar.xz ]&&[ -f cfe-8.0.1.src.tar.xz ]&&[ -f compiler-rt-8.0.1.src.tar.xz ];then
tar xf llvm-8.0.1.src.tar.xz
cd llvm-8.0.1.src
tar -xf ../cfe-8.0.1.src.tar.xz -C tools
tar -xf ../compiler-rt-8.0.1.src.tar.xz -C projects
mv tools/cfe-8.0.1.src tools/clang &&
mv projects/compiler-rt-8.0.1.src projects/compiler-rt
mkdir -v build && cd       build
CC=gcc CXX=g++                                  \
cmake -DCMAKE_INSTALL_PREFIX=$PORTS_DEST               \
      -DLLVM_ENABLE_FFI=ON                      \
      -DCMAKE_BUILD_TYPE=Release                \
      -DLLVM_BUILD_LLVM_DYLIB=ON                \
      -DLLVM_LINK_LLVM_DYLIB=ON                 \
      -DLLVM_ENABLE_RTTI=ON                     \
      -DLLVM_TARGETS_TO_BUILD="AArch64;AMDGPU;ARM;BPF;Hexagon;Lanai;Mips;MSP430;NVPTX;PowerPC;Sparc;SystemZ;WebAssembly;X86;XCore" \
      -DLLVM_BUILD_TESTS=ON                     \
      -Wno-dev ..
#ninja $PORTS_JOBS
make $PORTS_JOBS
#ninja docs-clang-html docs-clang-man
#ninja install
make install
echo ''
echo 'NIL'
echo 'NIL' > ../../R
else
echo ''
echo 'BUILD-ERROR'
echo 'BUILD-ERROR' > ../../R
fi
